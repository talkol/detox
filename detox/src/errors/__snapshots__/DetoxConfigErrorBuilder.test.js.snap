// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetoxConfigErrorBuilder .cantChooseDeviceConfiguration should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: Cannot determine which configuration to use from Detox config.

HINT: Use --configuration to choose one of the following:
* conf1
* conf2]
`;

exports[`DetoxConfigErrorBuilder .cantChooseDeviceConfiguration should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: Cannot determine which configuration to use from Detox config at path:
/etc/detox/config.js

HINT: Use --configuration to choose one of the following:
* conf1
* conf2]
`;

exports[`DetoxConfigErrorBuilder .failedToReadConfiguration should create a generic error, if I/O error is unknown 1`] = `
[DetoxConfigError: An error occurred while trying to load Detox config from:
/etc/detox/config.js]
`;

exports[`DetoxConfigErrorBuilder .failedToReadConfiguration should create a simple error, but with the original intercepted IO error 1`] = `
[DetoxConfigError: An error occurred while trying to load Detox config from:
/home/detox

EISDIR: illegal operation on a directory, read]
`;

exports[`DetoxConfigErrorBuilder .invalidDebugSynchronizationProperty should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: session.debugSynchronization should be a positive number

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      session: {
        debugSynchronization: '3000'
      }
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidDebugSynchronizationProperty should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: session.debugSynchronization should be a positive number

HINT: Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  configurations: {
    'android.release': {
      session: {
        debugSynchronization: '3000'
      }
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidDebugSynchronizationProperty should point to global session if there is one 1`] = `
[DetoxConfigError: session.debugSynchronization should be a positive number

HINT: Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  session: {
    server: 'ws://localhost:12837'
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidServerProperty should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: session.server property is not a valid WebSocket URL

HINT: Expected something like "ws://localhost:8099".
Check that in your Detox config.

{
  session: {
    server: 'localhost'
  },
  configurations: {
    'android.release': {}
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidServerProperty should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: session.server property is not a valid WebSocket URL

HINT: Expected something like "ws://localhost:8099".
Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  session: {
    server: 'localhost'
  },
  configurations: {
    'android.release': {}
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidSessionId should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: session.sessionId property should be a non-empty string

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      session: {
        sessionId: 234589798234
      }
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidSessionId should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: session.sessionId property should be a non-empty string

HINT: Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  configurations: {
    'android.release': {
      session: {
        sessionId: 234589798234
      }
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .invalidSessionId should point to global session if there is one 1`] = `
[DetoxConfigError: session.sessionId property should be a non-empty string

HINT: Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  session: {
    server: 'ws://localhost:12837'
  }
}]
`;

exports[`DetoxConfigErrorBuilder .malformedAppLaunchArgs should create an error with specifying the config name 1`] = `
[DetoxConfigError: Invalid type of "launchArgs" property in detox.configurations["android.release"]
Expected an object.

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      type: 'android.emulator',
      utilBinaryPaths: '/valid/path/outside/of/array',
      device: 'Pixel 4',
      launchArgs: 'do not use strings here please'
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .malformedAppLaunchArgsProperty should create an error with specifying the exact launch arg 1`] = `
[DetoxConfigError: Invalid property "invalidFalseProperty" inside detox.configurations["android.release"].launchArgs
Expected a string.

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      launchArgs: {
        validFalseProperty: 'false',
        invalidFalseProperty: false
      }
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .malformedUtilBinaryPaths should create an error with specifying the config name 1`] = `
[DetoxConfigError: Invalid type of "utilBinaryPaths" property in detox.configurations["android.release"]
Expected an array of strings of paths.

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      type: 'android.emulator',
      utilBinaryPaths: '/valid/path/outside/of/array',
      device: 'Pixel 4'
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .missingBuildScript should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: Could not find a build script inside "android.release" configuration.

HINT: Check contents of your Detox config.

{
  configurations: {
    'android.release': {
      type: 'android.emulator',
      device: [Object]
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .missingBuildScript should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: Could not find a build script inside "android.release" configuration.

HINT: Check contents of your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  configurations: {
    'android.release': {
      type: 'android.emulator',
      device: [Object]
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .missingConfigurationType should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: Missing "type" inside detox.configurations["android.release"].
Usually, "type" property should hold the device type to test on (e.g. "ios.simulator" or "android.emulator").

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      device: 'Nexus 5'
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .missingConfigurationType should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: Missing "type" inside detox.configurations["android.release"].
Usually, "type" property should hold the device type to test on (e.g. "ios.simulator" or "android.emulator").

HINT: Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  configurations: {
    'android.release': {
      device: 'Nexus 5'
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .missingDeviceProperty should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: Missing or empty "device" property inside detox.configurations["android.release"].
It should hold the device query to run on (e.g. { "type": "iPhone 11 Pro" }, { "avdName": "Nexus_5X_API_29" }).

HINT: Check that in your Detox config.

{
  configurations: {
    'android.release': {
      type: 'android.emulator'
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .missingDeviceProperty should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: Missing or empty "device" property inside detox.configurations["android.release"].
It should hold the device query to run on (e.g. { "type": "iPhone 11 Pro" }, { "avdName": "Nexus_5X_API_29" }).

HINT: Check that in your Detox config at path:
/home/detox/myproject/.detoxrc.json

{
  configurations: {
    'android.release': {
      type: 'android.emulator'
    }
  }
}]
`;

exports[`DetoxConfigErrorBuilder .noConfigurationAtGivenPath should create an error with the attempted config path 1`] = `
[DetoxConfigError: Failed to find Detox config at:
/home/detox/myproject/.detoxrc.json

HINT: Make sure the specified path is correct.]
`;

exports[`DetoxConfigErrorBuilder .noConfigurationSpecified should create a generic error, if the configuration file is not a package.json 1`] = `
[DetoxConfigError: Cannot run Detox without a configuration.

HINT: Make sure to create external .detoxrc.json configuration in the working directory before you run Detox.]
`;

exports[`DetoxConfigErrorBuilder .noConfigurationSpecified should create a generic error, if the configuration file is unknown 1`] = `
[DetoxConfigError: Cannot run Detox without a configuration.

HINT: Make sure to create external .detoxrc.json configuration in the working directory before you run Detox.]
`;

exports[`DetoxConfigErrorBuilder .noConfigurationSpecified should create an error with a package.json hint, if THAT is the configuration file 1`] = `
[DetoxConfigError: Cannot run Detox without a configuration.

HINT: Create an external .detoxrc.json configuration, or add "detox" configuration section to your package.json at:
/home/detox/myproject/package.json]
`;

exports[`DetoxConfigErrorBuilder .noDeviceConfigurationWithGivenName should create a generic error, if the config location is not known 1`] = `
[DetoxConfigError: Failed to find a configuration named "otherConf" in Detox config.

HINT: Below are the configurations Detox was able to find:
* conf1]
`;

exports[`DetoxConfigErrorBuilder .noDeviceConfigurationWithGivenName should create an error with a hint, if the config location is known 1`] = `
[DetoxConfigError: Failed to find a configuration named "otherConf" in Detox config at path:
/etc/detox/config.js

HINT: Below are the configurations Detox was able to find:
* conf1]
`;

exports[`DetoxConfigErrorBuilder .noDeviceConfigurationsInside should create a generic error if all is unknown 1`] = `
[DetoxConfigError: There are no device configurations in the given Detox config.

{
  configurations: undefined
}]
`;

exports[`DetoxConfigErrorBuilder .noDeviceConfigurationsInside should create an error with Detox config fragment, if the path is not known 1`] = `
[DetoxConfigError: There are no device configurations in the given Detox config.

{
  configurations: undefined,
  config: {
    ios: {},
    android: {}
  }
}]
`;

exports[`DetoxConfigErrorBuilder .noDeviceConfigurationsInside should create an error with Detox config location hint, if it is known 1`] = `
[DetoxConfigError: There are no device configurations in the given Detox config.

HINT: Examine the config at: /home/detox/myproject/.detoxrc.json

{
  configurations: undefined
}]
`;
